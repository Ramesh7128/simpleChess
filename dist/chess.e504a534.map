{"version":3,"sources":["chess.js"],"names":["columns","rows","INIT_WHITE","D1","INIT_BLACK","D8","currentMover","selectedPiece","cells","assignPiece","row","col","id","Piece","forEach","i","j","cell","color","piece","findValidRookMoves","possiblePositions","console","log","firstArray","secondArray","Number","pos","split","push","reverse","alteredFirstArray","alteredSecondArray","key","slice","findPossibleKnightPos","obj","potentialPos","indexOfObjCol","indexOf","potentialColumns","index","Math","abs","findPossiblePawnPos","length","findPossibleRooksPos","r","possiblePositionsVertical","c","possiblePositionsHorizontal","findPossibleKingsPos","new_row","new_col","findPossibleBishopPos","calculateValidity","name","timesMoved","move","currentPos","includes","nextPos","renderGame","htmlString","pieceInfo","root","document","getElementById","innerHTML","allCells","querySelectorAll","addEventListener"],"mappings":"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","file":"chess.e504a534.map","sourceRoot":"..","sourcesContent":["// create the board\n//  - 8 * 8 grid \n//  - alternate black and white cells\n//      - starts with white\n//  - Cell\n//    - color\n//    - id\n//    - piece?\n//  - Each square has an id\n// - Arrangement of the board\n//  \n// create a chess object\n//  - unique chess piece keys\n// Pieces\n//  - currentPos (rows, cols)\n//  - possiblePos\n//  - name\n//  - color\n//  - uniqueMoveLogic??\n//  - move - func\n// Conditions\n//  - kill\n//  - Check\n//    - checkmate\n//  - castling\n\nvar columns = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];\nvar rows = [1, 2, 3, 4, 5, 6, 7, 8];\n\nvar INIT_WHITE = {\n  'A1': 'rook', 'B1': 'knight', 'C1': 'bishop', D1: 'king', 'E1': 'queen', 'F1': 'bishop', 'G1': 'knight', 'H1': 'rook',\n  'A2': 'pawn', 'B2': 'pawn', 'C2': 'pawn', 'D2': 'pawn', 'E2': 'pawn', 'F2': 'pawn', 'G2': 'pawn', 'H2': 'pawn',\n}\n\nvar INIT_BLACK = {\n  'A8': 'rook', 'B8': 'knight', 'C8': 'bishop', D8: 'queen', 'E8': 'king', 'F8': 'bishop', 'G8': 'knight', 'H8': 'rook',\n  'A7': 'pawn', 'B7': 'pawn', 'C7': 'pawn', 'D7': 'pawn', 'E7': 'pawn', 'F7': 'pawn', 'G7': 'pawn', 'H7': 'pawn',\n}\n\nvar currentMover = 'white';\n\nvar selectedPiece;\n\nvar cells = {}; // Store of truth \n\nfunction assignPiece(row, col) {\n  var id = col+row;\n\n  if(INIT_WHITE[id]) {\n    return new Piece(INIT_WHITE[id], 'white', row, col)\n  } else if(INIT_BLACK[id]) {\n    return new Piece(INIT_BLACK[id], 'black', row, col)\n  } else {\n    return null;\n  }\n}\n\nrows.forEach((row, i) => {\n  columns.forEach((col, j) => {\n\n    var cell = {\n      color: (i+j) % 2 == 0 ? 'white' : 'black',\n      row: row,\n      col: col,\n      piece: assignPiece(row, col)\n    }\n\n    cells[col+row] = cell;\n  })\n});\n\n// 2 col, 1 row\n// 2 row, 1 col\n\nfunction findValidRookMoves(possiblePositions) {\n  console.log(possiblePositions);\n  let firstArray = [], secondArray= [];\n  let row = Number(selectedPiece.row);\n  for(let pos of possiblePositions) {\n    if (pos.split('')[1]<row) {\n      firstArray.push(pos);\n    } else {\n      secondArray.push(pos);\n    }\n  }\n  console.log(firstArray, secondArray, \"initial split\");\n\n  firstArray.reverse();\n  let alteredFirstArray = [];\n  let alteredSecondArray = [];\n  \n  for(let key in firstArray) {\n    console.log(cells[firstArray[key]].piece, \"cellblock piece\");\n    console.log(key, \"key in first Array\");\n    if(cells[firstArray[key]].piece) {\n      alteredFirstArray = firstArray.slice(0, key);\n      console.log(alteredFirstArray, 'firstArray');\n      break;\n    }\n  }\n  for(let key in secondArray) {\n    console.log(key, \"key in second Array\");\n    console.log(cells[secondArray[key]].piece, \"cellblock piece\");\n    if(cells[secondArray[key]].piece) {\n      alteredSecondArray = secondArray.slice(0, key);\n      console.log(alteredSecondArray, 'secondArray');\n      break;\n    }\n  }\n  possiblePositions = [...alteredFirstArray, ...alteredSecondArray];\n  return possiblePositions;\n}\n\n\nfunction findPossibleKnightPos(obj) { // 'A4'\n\n  var potentialPos = [];\n\n  var indexOfObjCol =  columns.indexOf(obj.col);\n\n  var potentialColumns = [];\n\n  columns.forEach((col, index) => {\n    if(Math.abs(index - indexOfObjCol) <= 2 && Math.abs(index - indexOfObjCol) !== 0) {\n      potentialColumns.push(col);\n    }\n  });\n\n  potentialColumns.forEach((col, index) => {\n    if(Math.abs(columns.indexOf(col) - indexOfObjCol) == 2) {\n      (rows.indexOf(obj.row-1) !== -1) ? potentialPos.push(col + (obj.row-1)) : null;\n      (rows.indexOf(obj.row+1) !== -1) ? potentialPos.push(col + (obj.row+1)) : null;\n    } else {\n      (rows.indexOf(obj.row-2) !== -1) ? potentialPos.push(col + (obj.row-2)) : null;\n      (rows.indexOf(obj.row+2) !== -1) ? potentialPos.push(col + (obj.row+2)) : null;\n    }\n  });\n  return potentialPos;\n}\n\nfunction findPossiblePawnPos() {\n  let {row, col} = selectedPiece;\n  row = Number(row);\n  const possiblePositions = [];\n  if (currentMover=='white') {\n    if (row ==2) {\n      possiblePositions.push(`${col}${row+2}`);  \n    }\n    possiblePositions.push(`${col}${row+1}`);\n    if ((columns.indexOf(col) - 1) > 0) {\n      possiblePositions.push(`${columns[columns.indexOf(col) - 1]}${row+1}`);\n    }\n    if ((columns.indexOf(col) + 1) < columns.length) {\n      possiblePositions.push(`${columns[columns.indexOf(col) + 1]}${row+1}`);\n    }\n    console.log(possiblePositions, \"possible positions\");\n  } else {\n    if (row ==7) {\n      possiblePositions.push(`${col}${row-2}`);  \n    }\n    possiblePositions.push(`${col}${row-1}`);\n    if ((columns.indexOf(col) - 1) > 0) {\n      possiblePositions.push(`${columns[columns.indexOf(col) - 1]}${row-1}`);\n    }\n    if ((columns.indexOf(col) + 1) < columns.length) {\n      possiblePositions.push(`${columns[columns.indexOf(col) + 1]}${row-1}`);\n    }\n  }\n  return possiblePositions;\n  selectedPiece.possiblePositions = [...possiblePositions];\n}\n\nfunction findPossibleRooksPos() {\n  const {row, col} = selectedPiece;\n  possiblePositions = [];\n  for(let r of rows) {\n    if (r !=row) {\n      possiblePositions.push(`${col}${r}`);\n    }\n  }\n  possiblePositionsVertical = findValidRookMoves(possiblePositions);\n  possiblePositions = [];\n  for(let c of columns) {\n    if (c !==col) {\n      possiblePositions.push(`${c}${row}`);\n    }\n  }\n  possiblePositionsHorizontal = findValidRookMoves(possiblePositions);\n  possiblePositions = [...possiblePositionsVertical, ...possiblePositionsHorizontal];\n  console.log(possiblePositions, 'rookpositions');\n  return possiblePositions;\n  selectedPiece.possiblePositions = [...possiblePositions];\n}\n\n\nfunction findPossibleKingsPos() {\n  const {row, col} = selectedPiece;\n  const possiblePositions = [];\n  let new_row = Number(row), new_col = col;\n  console.log('king called');\n  new_col = columns[columns.indexOf(new_col)+1];\n  new_row -= 1;\n  // upright\n  while(true) {\n    // new_row != 1 || new_row != 8 || new_col !='A' || new_col !='H'\n    console.log(new_col, new_row);\n    if (new_row > 1 && new_row < 8 && columns.indexOf(new_col) >= 0 && columns.indexOf(new_col) <= 8) {\n      possiblePositions.push(`${new_col}${new_row}`);\n      new_col = columns[columns.indexOf(new_col)+1];\n      new_row -= 1;\n      break;\n    } else {\n      break;\n    }\n  }\n  // downright\n  new_row = Number(row), new_col = col;\n  new_col = columns[columns.indexOf(new_col)+1];\n  new_row += 1;\n\n  while(true) {\n    // new_row != 1 || new_row != 8 || new_col !='A' || new_col !='H'\n    console.log(new_col, new_row);\n    if (new_row > 1 && new_row < 8 && columns.indexOf(new_col) >= 0 && columns.indexOf(new_col) <= 8) {\n      possiblePositions.push(`${new_col}${new_row}`);\n      new_col = columns[columns.indexOf(new_col)+1];\n      new_row += 1;\n      break;\n    } else {\n      break;\n    }\n  }\n  // downleft\n  new_row = Number(row), new_col = col;\n  new_col = columns[columns.indexOf(new_col)-1];\n  new_row += 1;\n  while(true) {\n    // new_row != 1 || new_row != 8 || new_col !='A' || new_col !='H'\n    console.log(new_col, new_row);\n    if (new_row > 1 && new_row < 8 && columns.indexOf(new_col) >= 0 && columns.indexOf(new_col) <= 8) {\n      possiblePositions.push(`${new_col}${new_row}`);\n      new_col = columns[columns.indexOf(new_col)-1];\n      new_row += 1;\n      break;\n    } else {\n      break;\n    }\n  }\n  // upleft\n  new_row = Number(row), new_col = col;\n  new_col = columns[columns.indexOf(new_col)-1];\n  new_row -= 1;\n  while(true) {\n    // new_row != 1 || new_row != 8 || new_col !='A' || new_col !='H'\n    console.log(new_col, new_row);\n    if (new_row > 1 && new_row < 8 && columns.indexOf(new_col) >= 0 && columns.indexOf(new_col) <= 8) {\n      possiblePositions.push(`${new_col}${new_row}`);\n      new_col = columns[columns.indexOf(new_col)-1];\n      new_row -= 1;\n      break;\n    } else {\n      break;\n    }\n  }\n\n  for(let r of rows) {\n    if (r !=row) {\n      if (r == row+1 || r == row-1) {\n        possiblePositions.push(`${col}${r}`);\n      }\n    }\n  }\n  for(let c of columns) {\n    if (c !==col) {\n      if (c === columns[columns.indexOf(col) + 1] || c === columns[columns.indexOf(col) - 1]) {\n        possiblePositions.push(`${c}${row}`);\n      }\n    }\n  }\n  return possiblePositions;\n  selectedPiece.possiblePositions = [...possiblePositions];\n}\n\n\nfunction findPossibleBishopPos() {\n  const {row, col} = selectedPiece;\n  const possiblePositions = [];\n  let new_row = Number(row), new_col = col;\n\n  console.log('bishop called');\n  new_col = columns[columns.indexOf(new_col)+1];\n  new_row -= 1;\n  // upright\n  while(true) {\n    // new_row != 1 || new_row != 8 || new_col !='A' || new_col !='H'\n    console.log(new_col, new_row);\n    if (new_row > 1 && new_row < 8 && columns.indexOf(new_col) >= 0 && columns.indexOf(new_col) <= 8) {\n      possiblePositions.push(`${new_col}${new_row}`);\n      new_col = columns[columns.indexOf(new_col)+1];\n      new_row -= 1;\n    } else {\n      break;\n    }\n  }\n  // downright\n  new_row = Number(row), new_col = col;\n  new_col = columns[columns.indexOf(new_col)+1];\n  new_row += 1;\n\n  while(true) {\n    // new_row != 1 || new_row != 8 || new_col !='A' || new_col !='H'\n    console.log(new_col, new_row);\n    if (new_row > 1 && new_row < 8 && columns.indexOf(new_col) >= 0 && columns.indexOf(new_col) <= 8) {\n      possiblePositions.push(`${new_col}${new_row}`);\n      new_col = columns[columns.indexOf(new_col)+1];\n      new_row += 1;\n    } else {\n      break;\n    }\n  }\n  // downleft\n  new_row = Number(row), new_col = col;\n  new_col = columns[columns.indexOf(new_col)-1];\n  new_row += 1;\n  while(true) {\n    // new_row != 1 || new_row != 8 || new_col !='A' || new_col !='H'\n    console.log(new_col, new_row);\n    if (new_row > 1 && new_row < 8 && columns.indexOf(new_col) >= 0 && columns.indexOf(new_col) <= 8) {\n      possiblePositions.push(`${new_col}${new_row}`);\n      new_col = columns[columns.indexOf(new_col)-1];\n      new_row += 1;\n    } else {\n      break;\n    }\n  }\n  // upleft\n  new_row = Number(row), new_col = col;\n  new_col = columns[columns.indexOf(new_col)-1];\n  new_row -= 1;\n  while(true) {\n    // new_row != 1 || new_row != 8 || new_col !='A' || new_col !='H'\n    console.log(new_col, new_row);\n    if (new_row > 1 && new_row < 8 && columns.indexOf(new_col) >= 0 && columns.indexOf(new_col) <= 8) {\n      possiblePositions.push(`${new_col}${new_row}`);\n      new_col = columns[columns.indexOf(new_col)-1];\n      new_row -= 1;\n    } else {\n      break;\n    }\n  }\n  return possiblePositions;\n  selectedPiece.possiblePositions = [...possiblePositions];\n}\n\n\nfunction calculateValidity() {\n  switch (selectedPiece.name) {\n    case \"pawn\":\n      selectedPiece.possiblePositions = [...findPossiblePawnPos()];\n      break;\n    case \"rook\":\n      selectedPiece.possiblePositions = [...findPossibleRooksPos()];\n      break;\n    case \"bishop\": \n      selectedPiece.possiblePositions = [...findPossibleBishopPos()];\n      break;\n    case \"knight\":\n      selectedPiece.possiblePositions = [...findPossibleKnightPos(selectedPiece)];\n      break;\n    case \"king\":\n      selectedPiece.possiblePositions = [...findPossibleKingsPos()];\n      break;\n    case \"queen\":\n      selectedPiece.possiblePositions = [...findPossibleBishopPos(),...findPossibleRooksPos()];\n      break;\n  }\n}\n\nfunction Piece(name, color, row, col) {\n  this.name = name;\n  this.color = color;\n  this.row = row;\n  this.col = col;\n  this.timesMoved = 0;\n  this.possiblePositions = [];\n  // position - A1\n  // check for validity of move\n  // move.\n  this.move = function(pos) {\n    \n    // TODO:check the validity of move.\n    calculateValidity();\n    console.log('Check');\n    var currentPos = this.col + this.row;\n    if (selectedPiece.possiblePositions.includes(pos)) {\n      console.log(\"inside condition0\");\n      var nextPos = pos;\n  \n      this.col = nextPos.split('')[0];\n      this.row = nextPos.split('')[1];\n  \n      console.log('I am supposed to move to ', nextPos, 'and my current pos is', currentPos);\n  \n      // empty the .piece property on the cell object\n      cells[currentPos].piece = null;\n      // set an new .piece prop on the nextPos cell obj\n      // kill logic\n      cells[nextPos].piece = this;\n      \n      // flip the currentMover\n      currentMover = this.color == 'white' ? 'black' : 'white';\n      selectedPiece = null;\n  \n      ++this.timesMoved;\n      renderGame();\n    }\n    else {\n      return;\n    }\n  }\n}\n\nfunction renderGame() {\n  var htmlString = '';\n  for(var cell in cells) {\n    var pieceInfo = cells[cell].piece ? cells[cell].piece.color + '-' + cells[cell].piece.name : '';\n    htmlString += `<div id=\"${cell}\" class=\"${cells[cell].color} cell\" data-piece=\"${pieceInfo}\"></div>`;\n  }\n\n  var root = document.getElementById('chess-board');\n  root.innerHTML = htmlString;\n\n  //addEventListeners\n  var allCells = document.querySelectorAll('.cell');\n\n  allCells.forEach((cell, index) => {\n    cell.addEventListener('click', () => {\n\n      if(cells[cell.id].piece && (cells[cell.id].piece.color == currentMover)) {\n        selectedPiece = cells[cell.id].piece;\n        console.log(selectedPiece);\n        return;\n      }\n\n      if(selectedPiece) {\n        selectedPiece.move(cell.id);\n      }\n\n    });\n  })\n}\n\nrenderGame();\n"]}